name: Build and Deploy Update to production
on:
    push:
        branches: [production]
        paths-ignore:
            - k8s/prod/kustomization.yaml
            - k8s/prod/service.yaml
            - k8s/prod/ingress.yaml
            - k8s/prod/configmap.yaml
            - k8s/prod/deployment.yaml

jobs:
    sonarqube:
        #needs: [ on-success ]
        name: sonarqube-scan
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
            - uses: sonarsource/sonarqube-scan-action@master
              env:
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
                  SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

            - uses: sonarsource/sonarqube-quality-gate-action@master
              timeout-minutes: 5
              env:
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    deploy:
        runs-on: ubuntu-latest
        needs: [sonarqube]
        environment:
            name: production
            url: https://bko.gigxpad.com
        if: github.ref == 'refs/heads/production'
        steps:
            - name: cancel previous run # in case of quick successions
              uses: styfle/cancel-workflow-action@0.4.1
              with:
                  access_token: ${{ github.token }}
            - name: Check out code
              uses: actions/checkout@v2

            - name: Setup Kustomize
              uses: imranismail/setup-kustomize@v1
              with:
                  kustomize-version: '3.6.1'

            - name: Configure AWS credentials for staging
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: eu-west-2

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1

            - name: Build, tag, and push image to Amazon ECR
              env:
                  ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                  ECR_REPOSITORY: gigxpad-web
                  IMAGE_TAG: ${{github.sha}}-bko
              run: |
                  docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
                  docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

            - name: Update Kubernetes resources
              env:
                  ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                  ECR_REPOSITORY: gigxpad-web
                  IMAGE_TAG: ${{github.sha}}-bko
              run: |
                  cd k8s/prod
                  kustomize edit set image xpad-bko=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
                  cat kustomization.yaml
            - name: Commit files
              run: |
                  git config --local user.email "action@github.com"
                  git config --local user.name "GitHub Action"
                  git commit -am "Bump docker tag"
            - name: Pushing to the protected branch 'protected'
              uses: CasperWA/push-protected@v2
              with:
                  token: ${{ secrets.PAT }}
                  branch: production
            - name: Notify slack success
              if: success()
              env:
                  SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
              uses: voxmedia/github-action-slack-notify-build@v1
              with:
                  channel: gigxpad-app-alerts
                  status: SUCCESS
                  color: good
            - name: Notify slack fail
              if: failure()
              env:
                  SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
              uses: voxmedia/github-action-slack-notify-build@v1
              with:
                  channel: gigxpad-app-alerts
                  status: FAILED
                  color: danger
